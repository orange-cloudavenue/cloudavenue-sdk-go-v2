{
  "EdgeGateway": {
    "Title": "EdgeGateway",
    "Documentation": "",
    "MarkdownDocumentation": "",
    "Commands": {
      "Create": {
        "namespace": "EdgeGateway",
        "resource": "",
        "verb": "Create",
        "short_documentation": "CreateEdgeGateway creates a new edge gateway",
        "long_documentation": "Create EdgeGateway performs a POST request to create a new edge gateway",
        "markdown_documentation": "",
        "params": [
          {
            "name": "owner_type",
            "description": "The type of the owner of the edge gateway.",
            "required": true,
            "example": "",
            "type": "string",
            "validators_description": "Validates that the value is one of: `vdc`, `vdcgroup`. \n"
          },
          {
            "name": "owner_name",
            "description": "The name of the VDC or VDC Group that this edge gateway belongs to.",
            "required": true,
            "example": "my-vdc",
            "type": "string",
            "validators_description": ""
          },
          {
            "name": "t0_name",
            "description": "The name of the T0 router that this edge gateway will be connected to. If not provided and only if one T0 router is available, the first T0 router will be used.",
            "required": false,
            "example": "tn01e02ocb0001234spt101",
            "type": "string",
            "validators_description": "Validates that the value is a valid T0 name (pr01e02ocb0001234spt101).. \n"
          },
          {
            "name": "bandwidth",
            "description": "The bandwidth limit in Mbps for the edge gateway. If t0 is SHARED, it must be one of the available values for the T0 router (Default value:  5Mbps). If t0 is DEDICATED, unlimited bandwidth is allowed.",
            "required": false,
            "example": "",
            "type": "int",
            "validators_description": ""
          }
        ],
        "deprecated": false,
        "deprecated_message": "",
        "model": [
          {
            "object": "id",
            "type": "string",
            "documentation": "ID of the edge gateway"
          },
          {
            "object": "name",
            "type": "string",
            "documentation": "Name of the edge gateway"
          },
          {
            "object": "description",
            "type": "string",
            "documentation": "Description of the edge gateway"
          },
          {
            "object": "owner_ref.id",
            "type": "string",
            "documentation": ""
          },
          {
            "object": "owner_ref.name",
            "type": "string",
            "documentation": ""
          },
          {
            "object": "uplink_t0.id",
            "type": "string",
            "documentation": ""
          },
          {
            "object": "uplink_t0.name",
            "type": "string",
            "documentation": ""
          }
        ]
      },
      "Delete": {
        "namespace": "EdgeGateway",
        "resource": "",
        "verb": "Delete",
        "short_documentation": "DeleteEdgeGateway deletes an edge gateway",
        "long_documentation": "Delete EdgeGateway performs a DELETE request to delete an edge gateway",
        "markdown_documentation": "",
        "params": [
          {
            "name": "id",
            "description": "The unique identifier of the edge gateway.",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": "The value is required if the parameter `Name` is null., Validates that the value is a valid URN (`edgegateway`).. \n"
          },
          {
            "name": "name",
            "description": "The name of the edge gateway.",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": "The value is required if the parameter `ID` is null., "
          }
        ],
        "deprecated": false,
        "deprecated_message": "",
        "model": null
      },
      "Get": {
        "namespace": "EdgeGateway",
        "resource": "",
        "verb": "Get",
        "short_documentation": "GetEdgeGateway retrieves an edge gateway",
        "long_documentation": "Get EdgeGateway performs a GET request to retrieve an edge gateway",
        "markdown_documentation": "",
        "params": [
          {
            "name": "id",
            "description": "The unique identifier of the edge gateway.",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": "The value is required if the parameter `Name` is null., Validates that the value is a valid URN (`edgegateway`).. \n"
          },
          {
            "name": "name",
            "description": "The name of the edge gateway.",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": "The value is required if the parameter `ID` is null., Validates that the value is a valid Edge Gateway name (tn01e02ocb0001234spt101).. \n"
          }
        ],
        "deprecated": false,
        "deprecated_message": "",
        "model": [
          {
            "object": "id",
            "type": "string",
            "documentation": "ID of the edge gateway"
          },
          {
            "object": "name",
            "type": "string",
            "documentation": "Name of the edge gateway"
          },
          {
            "object": "description",
            "type": "string",
            "documentation": "Description of the edge gateway"
          },
          {
            "object": "owner_ref.id",
            "type": "string",
            "documentation": ""
          },
          {
            "object": "owner_ref.name",
            "type": "string",
            "documentation": ""
          },
          {
            "object": "uplink_t0.id",
            "type": "string",
            "documentation": ""
          },
          {
            "object": "uplink_t0.name",
            "type": "string",
            "documentation": ""
          }
        ]
      },
      "List": {
        "namespace": "EdgeGateway",
        "resource": "",
        "verb": "List",
        "short_documentation": "ListEdgeGateways retrieves a list of edge gateways",
        "long_documentation": "List EdgeGateways performs a GET request to retrieve a list of edge gateways",
        "markdown_documentation": "",
        "params": null,
        "deprecated": false,
        "deprecated_message": "",
        "model": [
          {
            "object": "edge_gateways.{index}.id",
            "type": "string",
            "documentation": "ID of the edge gateway"
          },
          {
            "object": "edge_gateways.{index}.name",
            "type": "string",
            "documentation": "Name of the edge gateway"
          },
          {
            "object": "edge_gateways.{index}.description",
            "type": "string",
            "documentation": "Description of the edge gateway"
          },
          {
            "object": "edge_gateways.{index}.owner_ref.id",
            "type": "string",
            "documentation": ""
          },
          {
            "object": "edge_gateways.{index}.owner_ref.name",
            "type": "string",
            "documentation": ""
          },
          {
            "object": "edge_gateways.{index}.uplink_t0.id",
            "type": "string",
            "documentation": ""
          },
          {
            "object": "edge_gateways.{index}.uplink_t0.name",
            "type": "string",
            "documentation": ""
          }
        ]
      },
      "Update": {
        "namespace": "EdgeGateway",
        "resource": "",
        "verb": "Update",
        "short_documentation": "UpdateEdgeGateway updates an edge gateway",
        "long_documentation": "Update EdgeGateway performs a PUT request to update an edge gateway",
        "markdown_documentation": "",
        "params": [
          {
            "name": "id",
            "description": "The unique identifier of the edge gateway.",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": "The value is required if the parameter `Name` is null., Validates that the value is a valid URN (`edgegateway`).. \n"
          },
          {
            "name": "name",
            "description": "The name of the edge gateway.",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": "The value is required if the parameter `ID` is null., "
          },
          {
            "name": "bandwidth",
            "description": "The new bandwidth limit in Mbps for the edge gateway. If t0 is SHARED, it must be one of the available values for the T0 router (Default value: 5Mbps). If t0 is DEDICATED, unlimited bandwidth is allowed.",
            "required": true,
            "example": "",
            "type": "int",
            "validators_description": ""
          }
        ],
        "deprecated": false,
        "deprecated_message": "",
        "model": [
          {
            "object": "id",
            "type": "string",
            "documentation": "ID of the edge gateway"
          },
          {
            "object": "name",
            "type": "string",
            "documentation": "Name of the edge gateway"
          },
          {
            "object": "description",
            "type": "string",
            "documentation": "Description of the edge gateway"
          },
          {
            "object": "owner_ref.id",
            "type": "string",
            "documentation": ""
          },
          {
            "object": "owner_ref.name",
            "type": "string",
            "documentation": ""
          },
          {
            "object": "uplink_t0.id",
            "type": "string",
            "documentation": ""
          },
          {
            "object": "uplink_t0.name",
            "type": "string",
            "documentation": ""
          }
        ]
      }
    },
    "SubFunctionality": {
      "CloudavenueServices": {
        "Title": "CloudavenueServices",
        "Documentation": "",
        "MarkdownDocumentation": "Manage Cloud Avenue services on an EdgeGateway. Cloudavenue services is a network setting that allows the EdgeGateway to connect to the mutualized Cloud Avenue services (DNS, DHCP, etc.).",
        "Commands": {
          "Disable": {
            "namespace": "EdgeGateway",
            "resource": "CloudavenueServices",
            "verb": "Disable",
            "short_documentation": "Disable Cloud Avenue services on an EdgeGateway.",
            "long_documentation": "Disable Cloud Avenue services on an EdgeGateway. Cloudavenue services is a network setting that allows the EdgeGateway to connect to the mutualized Cloud Avenue services (DNS, DHCP, etc.).",
            "markdown_documentation": "",
            "params": [
              {
                "name": "id",
                "description": "The unique identifier of the edge gateway.",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `name` is null., Validates that the value is a valid URN (`edgegateway`).. \n"
              },
              {
                "name": "name",
                "description": "The name of the edge gateway.",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `id` is null., "
              }
            ],
            "deprecated": false,
            "deprecated_message": "",
            "model": null
          },
          "Enable": {
            "namespace": "EdgeGateway",
            "resource": "CloudavenueServices",
            "verb": "Enable",
            "short_documentation": "Enable Cloud Avenue services on an EdgeGateway.",
            "long_documentation": "Enable Cloud Avenue services on an EdgeGateway. ",
            "markdown_documentation": "",
            "params": [
              {
                "name": "id",
                "description": "The unique identifier of the edge gateway.",
                "required": false,
                "example": "urn:vcloud:gateway:2b25c65a-2428-4641-83f8-47a01c7dd259",
                "type": "string",
                "validators_description": "The value is required if the parameter `name` is null., Validates that the value is a valid URN (`edgegateway`).. \n"
              },
              {
                "name": "name",
                "description": "The name of the edge gateway.",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `id` is null., "
              }
            ],
            "deprecated": false,
            "deprecated_message": "",
            "model": null
          },
          "Get": {
            "namespace": "EdgeGateway",
            "resource": "CloudavenueServices",
            "verb": "Get",
            "short_documentation": "Retrieve Cloud Avenue services on an EdgeGateway.",
            "long_documentation": "Retrieve Cloud Avenue services on an EdgeGateway. This command returns the Cloud Avenue services available on the EdgeGateway, such as DNS, DHCP, and others.",
            "markdown_documentation": "",
            "params": [
              {
                "name": "id",
                "description": "The unique identifier of the edge gateway.",
                "required": false,
                "example": "urn:vcloud:gateway:2876abbd-654d-4bec-a095-b569ea27e38b",
                "type": "string",
                "validators_description": "The value is required if the parameter `name` is null., Validates that the value is a valid URN (`edgegateway`).. \n"
              },
              {
                "name": "name",
                "description": "The name of the edge gateway.",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `id` is null., "
              }
            ],
            "deprecated": false,
            "deprecated_message": "",
            "model": [
              {
                "object": "id",
                "type": "string",
                "documentation": "Identifier of the network service"
              },
              {
                "object": "name",
                "type": "string",
                "documentation": "Name of the network service"
              },
              {
                "object": "network",
                "type": "string",
                "documentation": "Network of the service in IP/CIDR format"
              },
              {
                "object": "dedicated_ip_for_service",
                "type": "string",
                "documentation": "Dedicated IP for the service in IP format (Used for the NAT to connect to the service)"
              },
              {
                "object": "service_details.{index}.category",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service_details.{index}.network",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service_details.{index}.services.{index}.name",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service_details.{index}.services.{index}.description",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service_details.{index}.services.{index}.documentation_url",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service_details.{index}.services.{index}.ip.{index}",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service_details.{index}.services.{index}.fqdn.{index}",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service_details.{index}.services.{index}.ports.{index}.port",
                "type": "int",
                "documentation": "Port of the service"
              },
              {
                "object": "service_details.{index}.services.{index}.ports.{index}.protocol",
                "type": "string",
                "documentation": "Protocol of the service"
              }
            ]
          }
        },
        "SubFunctionality": {}
      },
      "PublicIP": {
        "Title": "PublicIP",
        "Documentation": "",
        "MarkdownDocumentation": "",
        "Commands": {
          "Create": {
            "namespace": "EdgeGateway",
            "resource": "PublicIP",
            "verb": "Create",
            "short_documentation": "Create a new Public IP",
            "long_documentation": "This command allows you to create a new Public IP in the Edge Gateway.",
            "markdown_documentation": "",
            "params": [
              {
                "name": "id",
                "description": "The unique identifier of the edge gateway.",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `name` is null., Validates that the value is a valid URN (`edgegateway`).. \n"
              },
              {
                "name": "name",
                "description": "The name of the edge gateway.",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `id` is null., "
              }
            ],
            "deprecated": false,
            "deprecated_message": "",
            "model": [
              {
                "object": "edgegateway_id",
                "type": "string",
                "documentation": "ID of the edge gateway"
              },
              {
                "object": "edgegateway_name",
                "type": "string",
                "documentation": "Name of the edge gateway"
              },
              {
                "object": "id",
                "type": "string",
                "documentation": "Identifier of the network service"
              },
              {
                "object": "name",
                "type": "string",
                "documentation": "Name of the network service"
              },
              {
                "object": "ip",
                "type": "string",
                "documentation": "Public IP address"
              },
              {
                "object": "announced",
                "type": "bool",
                "documentation": "Indicates if the public IP address is announced"
              }
            ]
          },
          "Delete": {
            "namespace": "EdgeGateway",
            "resource": "PublicIP",
            "verb": "Delete",
            "short_documentation": "Delete a Public IP",
            "long_documentation": "This command allows you to delete a Public IP in the Edge Gateway.",
            "markdown_documentation": "",
            "params": [
              {
                "name": "ip",
                "description": "The public IP address.",
                "required": true,
                "example": "",
                "type": "string",
                "validators_description": "Validates that the value is a valid IPv4 address. (E.g. 192.168.1.1 or 203.0.113.0). \n"
              }
            ],
            "deprecated": false,
            "deprecated_message": "",
            "model": null
          },
          "Get": {
            "namespace": "EdgeGateway",
            "resource": "PublicIP",
            "verb": "Get",
            "short_documentation": "Get a Public IP",
            "long_documentation": "This command allows you to retrieve information about a Public IP in the Edge Gateway.",
            "markdown_documentation": "",
            "params": [
              {
                "name": "ip",
                "description": "The public IP address.",
                "required": true,
                "example": "",
                "type": "string",
                "validators_description": "Validates that the value is a valid IPv4 address. (E.g. 192.168.1.1 or 203.0.113.0). \n"
              },
              {
                "name": "id",
                "description": "The unique identifier of the edge gateway.",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `name` is null., Validates that the value is a valid URN (`edgegateway`).. \n"
              },
              {
                "name": "name",
                "description": "The name of the edge gateway.",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `id` is null., "
              }
            ],
            "deprecated": false,
            "deprecated_message": "",
            "model": [
              {
                "object": "edgegateway_id",
                "type": "string",
                "documentation": "ID of the edge gateway"
              },
              {
                "object": "edgegateway_name",
                "type": "string",
                "documentation": "Name of the edge gateway"
              },
              {
                "object": "id",
                "type": "string",
                "documentation": "Identifier of the network service"
              },
              {
                "object": "name",
                "type": "string",
                "documentation": "Name of the network service"
              },
              {
                "object": "ip",
                "type": "string",
                "documentation": "Public IP address"
              },
              {
                "object": "announced",
                "type": "bool",
                "documentation": "Indicates if the public IP address is announced"
              }
            ]
          },
          "List": {
            "namespace": "EdgeGateway",
            "resource": "PublicIP",
            "verb": "List",
            "short_documentation": "List Public IPs",
            "long_documentation": "This command allows you to list all Public IPs in the Edge Gateway.",
            "markdown_documentation": "",
            "params": [
              {
                "name": "id",
                "description": "The unique identifier of the edge gateway.",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `name` is null., Validates that the value is a valid URN (`edgegateway`).. \n"
              },
              {
                "name": "name",
                "description": "The name of the edge gateway.",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `id` is null., "
              }
            ],
            "deprecated": false,
            "deprecated_message": "",
            "model": [
              {
                "object": "edgegateway_id",
                "type": "string",
                "documentation": "ID of the edge gateway"
              },
              {
                "object": "edgegateway_name",
                "type": "string",
                "documentation": "Name of the edge gateway"
              },
              {
                "object": "public_i_ps.{index}.edgegateway_id",
                "type": "string",
                "documentation": "ID of the edge gateway"
              },
              {
                "object": "public_i_ps.{index}.edgegateway_name",
                "type": "string",
                "documentation": "Name of the edge gateway"
              },
              {
                "object": "public_i_ps.{index}.id",
                "type": "string",
                "documentation": "Identifier of the network service"
              },
              {
                "object": "public_i_ps.{index}.name",
                "type": "string",
                "documentation": "Name of the network service"
              },
              {
                "object": "public_i_ps.{index}.ip",
                "type": "string",
                "documentation": "Public IP address"
              },
              {
                "object": "public_i_ps.{index}.announced",
                "type": "bool",
                "documentation": "Indicates if the public IP address is announced"
              }
            ]
          }
        },
        "SubFunctionality": {}
      },
      "Services": {
        "Title": "Services",
        "Documentation": "",
        "MarkdownDocumentation": "",
        "Commands": {
          "Get": {
            "namespace": "EdgeGateway",
            "resource": "Services",
            "verb": "Get",
            "short_documentation": "Retrieve services information about a specific EdgeGateway.",
            "long_documentation": "Retrieve services information about a specific EdgeGateway. This command retrieves the network services available on the EdgeGateway, such as load balancers, public IPs, and Cloud Avenue services.",
            "markdown_documentation": "",
            "params": [
              {
                "name": "id",
                "description": "The unique identifier of the edge gateway.",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `name` is null., Validates that the value is a valid URN (`edgegateway`).. \n"
              },
              {
                "name": "name",
                "description": "The name of the edge gateway.",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `id` is null., "
              }
            ],
            "deprecated": false,
            "deprecated_message": "",
            "model": [
              {
                "object": "id",
                "type": "string",
                "documentation": "Identifier of the edge gateway"
              },
              {
                "object": "name",
                "type": "string",
                "documentation": "Name of the edge gateway"
              },
              {
                "object": "load_balancer.id",
                "type": "string",
                "documentation": "Identifier of the network service"
              },
              {
                "object": "load_balancer.name",
                "type": "string",
                "documentation": "Name of the network service"
              },
              {
                "object": "load_balancer.class_of_service",
                "type": "string",
                "documentation": "Class of service for the load balancer"
              },
              {
                "object": "load_balancer.max_virtual_services",
                "type": "int",
                "documentation": "Maximum number of virtual services"
              },
              {
                "object": "public_ip.{index}",
                "type": "*types.ModelEdgeGatewayServicesPublicIP",
                "documentation": ""
              },
              {
                "object": "service.id",
                "type": "string",
                "documentation": "Identifier of the network service"
              },
              {
                "object": "service.name",
                "type": "string",
                "documentation": "Name of the network service"
              },
              {
                "object": "service.network",
                "type": "string",
                "documentation": "Network of the service in IP/CIDR format"
              },
              {
                "object": "service.dedicated_ip_for_service",
                "type": "string",
                "documentation": "Dedicated IP for the service in IP format (Used for the NAT to connect to the service)"
              },
              {
                "object": "service.service_details.{index}.category",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service.service_details.{index}.network",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service.service_details.{index}.services.{index}.name",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service.service_details.{index}.services.{index}.description",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service.service_details.{index}.services.{index}.documentation_url",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service.service_details.{index}.services.{index}.ip.{index}",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service.service_details.{index}.services.{index}.fqdn.{index}",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "service.service_details.{index}.services.{index}.ports.{index}.port",
                "type": "int",
                "documentation": "Port of the service"
              },
              {
                "object": "service.service_details.{index}.services.{index}.ports.{index}.protocol",
                "type": "string",
                "documentation": "Protocol of the service"
              }
            ]
          }
        },
        "SubFunctionality": {}
      }
    }
  },
  "T0": {
    "Title": "T0",
    "Documentation": "",
    "MarkdownDocumentation": "",
    "Commands": {
      "Get": {
        "namespace": "T0",
        "resource": "",
        "verb": "Get",
        "short_documentation": "Get a specific T0 by name.",
        "long_documentation": "Retrieve a specific T0 directly by its name or by the edge gateway it is associated with. This command allows you to fetch detailed information about a specific T0.",
        "markdown_documentation": "",
        "params": [
          {
            "name": "t0_name",
            "description": "The name of the T0 to retrieve.",
            "required": false,
            "example": "prvrf01eocb0001234allsp01",
            "type": "string",
            "validators_description": "The value is required if one of the parameters `edgegateway_id`, `edgegateway_name` is null., Validates that the value is a valid T0 name (pr01e02ocb0001234spt101).. \n"
          },
          {
            "name": "edgegateway_id",
            "description": "The unique identifier of the edge gateway.",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": "The value is required if one of the parameters `t0_name`, `edgegateway_name` is null., Validates that the value is a valid URN (`edgegateway`).. \n"
          },
          {
            "name": "edgegateway_name",
            "description": "The name of the edge gateway.",
            "required": false,
            "example": "tn01e02ocb0001234spt101",
            "type": "string",
            "validators_description": "The value is required if one of the parameters `edgegateway_id`, `t0_name` is null., "
          }
        ],
        "deprecated": false,
        "deprecated_message": "",
        "model": [
          {
            "object": "name",
            "type": "string",
            "documentation": "Name of the T0 router"
          },
          {
            "object": "class_of_service",
            "type": "string",
            "documentation": "Class of service for the T0 router."
          },
          {
            "object": "bandwidth.capacity",
            "type": "int",
            "documentation": "Total bandwidth capacity for the T0 router in Mbps. This is the maximum bandwidth that can be allocated to the T0 router. It is a limit imposed by the Class of Service."
          },
          {
            "object": "bandwidth.provisioned",
            "type": "int",
            "documentation": "Total bandwidth provisioned for the T0 router across all edge gateways in Mbps."
          },
          {
            "object": "bandwidth.remaining",
            "type": "int",
            "documentation": "Remaining bandwidth that can be allocated to the edge gateways in Mbps. This is calculated as Capacity - Provisioned."
          },
          {
            "object": "bandwidth.allowed_bandwidth_values.{index}",
            "type": "int",
            "documentation": "Allowed bandwidth values for the T0 router in Mbps. This is used to determine the available bandwidth options for the new edge gateway. If empty, no bandwidth remaining to allocate."
          },
          {
            "object": "bandwidth.allow_unlimited",
            "type": "bool",
            "documentation": "Indicates if unlimited bandwidth is allowed for the T0 router. This is true if the T0 router is DEDICATED."
          },
          {
            "object": "max_edge_gateways",
            "type": "int",
            "documentation": "Maximum number of edge gateways for the T0 router."
          },
          {
            "object": "edge_gateways.{index}.id",
            "type": "string",
            "documentation": "Unique identifier of the edge gateway. It is a URN that uniquely identifies the edge gateway."
          },
          {
            "object": "edge_gateways.{index}.name",
            "type": "string",
            "documentation": "Name of the edge gateway."
          },
          {
            "object": "edge_gateways.{index}.bandwidth",
            "type": "int",
            "documentation": "Bandwidth allocated to the edge gateway in Mbps."
          },
          {
            "object": "edge_gateways.{index}.allowed_bandwidth_values.{index}",
            "type": "int",
            "documentation": "Allowed bandwidth values for the edge gateway in Mbps."
          }
        ]
      },
      "List": {
        "namespace": "T0",
        "resource": "",
        "verb": "List",
        "short_documentation": "List all T0s available in the organization.",
        "long_documentation": "List all T0s available in the organization. This command retrieves a list of all T0s, which are the top-level network services in the Edge Gateway architecture.",
        "markdown_documentation": "",
        "params": null,
        "deprecated": false,
        "deprecated_message": "",
        "model": [
          {
            "object": "count",
            "type": "int",
            "documentation": ""
          },
          {
            "object": "t0s.{index}.name",
            "type": "string",
            "documentation": "Name of the T0 router"
          },
          {
            "object": "t0s.{index}.class_of_service",
            "type": "string",
            "documentation": "Class of service for the T0 router."
          },
          {
            "object": "t0s.{index}.bandwidth.capacity",
            "type": "int",
            "documentation": "Total bandwidth capacity for the T0 router in Mbps. This is the maximum bandwidth that can be allocated to the T0 router. It is a limit imposed by the Class of Service."
          },
          {
            "object": "t0s.{index}.bandwidth.provisioned",
            "type": "int",
            "documentation": "Total bandwidth provisioned for the T0 router across all edge gateways in Mbps."
          },
          {
            "object": "t0s.{index}.bandwidth.remaining",
            "type": "int",
            "documentation": "Remaining bandwidth that can be allocated to the edge gateways in Mbps. This is calculated as Capacity - Provisioned."
          },
          {
            "object": "t0s.{index}.bandwidth.allowed_bandwidth_values.{index}",
            "type": "int",
            "documentation": "Allowed bandwidth values for the T0 router in Mbps. This is used to determine the available bandwidth options for the new edge gateway. If empty, no bandwidth remaining to allocate."
          },
          {
            "object": "t0s.{index}.bandwidth.allow_unlimited",
            "type": "bool",
            "documentation": "Indicates if unlimited bandwidth is allowed for the T0 router. This is true if the T0 router is DEDICATED."
          },
          {
            "object": "t0s.{index}.max_edge_gateways",
            "type": "int",
            "documentation": "Maximum number of edge gateways for the T0 router."
          },
          {
            "object": "t0s.{index}.edge_gateways.{index}.id",
            "type": "string",
            "documentation": "Unique identifier of the edge gateway. It is a URN that uniquely identifies the edge gateway."
          },
          {
            "object": "t0s.{index}.edge_gateways.{index}.name",
            "type": "string",
            "documentation": "Name of the edge gateway."
          },
          {
            "object": "t0s.{index}.edge_gateways.{index}.bandwidth",
            "type": "int",
            "documentation": "Bandwidth allocated to the edge gateway in Mbps."
          },
          {
            "object": "t0s.{index}.edge_gateways.{index}.allowed_bandwidth_values.{index}",
            "type": "int",
            "documentation": "Allowed bandwidth values for the edge gateway in Mbps."
          }
        ]
      }
    },
    "SubFunctionality": {}
  },
  "VDC": {
    "Title": "VDC",
    "Documentation": "",
    "MarkdownDocumentation": "",
    "Commands": {
      "Create": {
        "namespace": "VDC",
        "resource": "",
        "verb": "Create",
        "short_documentation": "Create a new VDC",
        "long_documentation": "Create a new Virtual Data Center (VDC) with the specified parameters.",
        "markdown_documentation": "",
        "params": [
          {
            "name": "name",
            "description": "Name of the VDC to create",
            "required": true,
            "example": "my-vdc",
            "type": "string",
            "validators_description": ""
          },
          {
            "name": "description",
            "description": "Description of the VDC to create",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": ""
          },
          {
            "name": "service_class",
            "description": "Service class of the VDC to create",
            "required": true,
            "example": "STD",
            "type": "string",
            "validators_description": "Validates that the value is one of: `ECO`, `STD`, `HP`, `VOIP`. \n"
          },
          {
            "name": "disponibility_class",
            "description": "Disponibility class of the VDC to create",
            "required": true,
            "example": "ONE-ROOM",
            "type": "string",
            "validators_description": "Validates that the value is one of: `ONE-ROOM`, `DUAL-ROOM`, `HA-DUAL-ROOM`. \n"
          },
          {
            "name": "billing_model",
            "description": "Billing model of the VDC to create",
            "required": true,
            "example": "PAYG",
            "type": "string",
            "validators_description": "Validates that the value is one of: `PAYG`, `DRAAS`, `RESERVED`. \n"
          },
          {
            "name": "storage_billing_model",
            "description": "Storage billing model of the VDC to create",
            "required": true,
            "example": "PAYG",
            "type": "string",
            "validators_description": "Validates that the value is one of: `PAYG`, `RESERVED`. \n"
          },
          {
            "name": "vcpu",
            "description": "Number of vCPUs to allocate to the VDC.",
            "required": true,
            "example": "50",
            "type": "int",
            "validators_description": ""
          },
          {
            "name": "memory",
            "description": "Amount of memory (in GB) to allocate to the VDC.",
            "required": true,
            "example": "500",
            "type": "int",
            "validators_description": ""
          },
          {
            "name": "storage_profiles.{index}.class",
            "description": "Class of the storage profile to create. Predefined classes or dedicated storage classes can be used. For predefined classes you have different properties (`_r1`, `_r2` and `_hm`) that can be used to define the storage profile.",
            "required": true,
            "example": "gold",
            "type": "string",
            "validators_description": ""
          },
          {
            "name": "storage_profiles.{index}.limit",
            "description": "Limit of the storage profile to create. This is the maximum amount of storage that can be used by the VDC. This is in GiB.",
            "required": true,
            "example": "500",
            "type": "int",
            "validators_description": "Validates that the value is between 100 and 81920. \n"
          },
          {
            "name": "storage_profiles.{index}.default",
            "description": "Default storage profile to create. This will be used if no specific profile is provided.",
            "required": false,
            "example": "true",
            "type": "bool",
            "validators_description": ""
          }
        ],
        "deprecated": false,
        "deprecated_message": "",
        "model": [
          {
            "object": "id",
            "type": "string",
            "documentation": "ID of the VDC"
          },
          {
            "object": "name",
            "type": "string",
            "documentation": "Name of the VDC"
          },
          {
            "object": "description",
            "type": "string",
            "documentation": "Description of the VDC"
          },
          {
            "object": "compute_capacity.cpu.vcpu",
            "type": "int",
            "documentation": "Number of VCPUs"
          },
          {
            "object": "compute_capacity.cpu.used",
            "type": "int",
            "documentation": "Used VCPUs"
          },
          {
            "object": "compute_capacity.cpu.frequency",
            "type": "int",
            "documentation": "Frequency of the VCPUs in MHz"
          },
          {
            "object": "compute_capacity.memory.limit",
            "type": "int",
            "documentation": "Limit of memory in GB"
          },
          {
            "object": "compute_capacity.memory.used",
            "type": "int",
            "documentation": "Used memory in GB"
          },
          {
            "object": "networks.{index}.id",
            "type": "string",
            "documentation": "ID of the network"
          },
          {
            "object": "networks.{index}.name",
            "type": "string",
            "documentation": "Name of the network"
          },
          {
            "object": "storage_profiles.{index}.id",
            "type": "string",
            "documentation": "ID of the storage profile"
          },
          {
            "object": "storage_profiles.{index}.name",
            "type": "string",
            "documentation": "Class name of the storage profile"
          },
          {
            "object": "properties.service_class",
            "type": "string",
            "documentation": "Service class of the VDC"
          },
          {
            "object": "properties.disponibility_class",
            "type": "string",
            "documentation": "Disponibility class of the VDC"
          },
          {
            "object": "properties.billing_model",
            "type": "string",
            "documentation": "Billing model of the VDC compute"
          },
          {
            "object": "properties.storage_billing_model",
            "type": "string",
            "documentation": "Billing model of the VDC storage"
          },
          {
            "object": "number_of_vms",
            "type": "int",
            "documentation": "Number of VMs in the VDC"
          },
          {
            "object": "number_of_running_vms",
            "type": "int",
            "documentation": "Number of running VMs in the VDC"
          },
          {
            "object": "number_of_vapps",
            "type": "int",
            "documentation": "Number of deployed VApps in the VDC"
          },
          {
            "object": "number_of_storage_profiles",
            "type": "int",
            "documentation": "Number of storage profiles in the VDC"
          },
          {
            "object": "number_of_disks",
            "type": "int",
            "documentation": "Number of disks in the VDC"
          }
        ],
        "rules": [
          {
            "consoles": [
              "Console Externe VDR",
              "Console Interne VDR"
            ],
            "whenHuman": "(service_class = ECO)",
            "when": {
              "and": [
                {
                  "field": "service_class",
                  "value": "ECO"
                }
              ]
            },
            "target": "disponibility_class",
            "enum": [
              "ONE-ROOM",
              "DUAL-ROOM"
            ],
            "description": "Disponibility class allowed for Service Class ECO"
          },
          {
            "consoles": [
              "Console Externe CHA",
              "Console Interne CHA"
            ],
            "whenHuman": "",
            "when": {},
            "target": "disponibility_class",
            "enum": [
              "ONE-ROOM"
            ],
            "description": "Disponibility class allowed for Service Class ECO"
          },
          {
            "consoles": [
              "Console Externe VDR",
              "Console Interne VDR"
            ],
            "whenHuman": "(service_class = STD OR service_class = HP OR service_class = VOIP)",
            "when": {
              "or": [
                {
                  "field": "service_class",
                  "value": "STD"
                },
                {
                  "field": "service_class",
                  "value": "HP"
                },
                {
                  "field": "service_class",
                  "value": "VOIP"
                }
              ]
            },
            "target": "disponibility_class",
            "enum": [
              "ONE-ROOM",
              "DUAL-ROOM",
              "HA-DUAL-ROOM"
            ],
            "description": "Disponibility class allowed for Service Class STD, HP, VOIP"
          },
          {
            "consoles": null,
            "whenHuman": "(service_class = ECO OR service_class = STD)",
            "when": {
              "or": [
                {
                  "field": "service_class",
                  "value": "ECO"
                },
                {
                  "field": "service_class",
                  "value": "STD"
                }
              ]
            },
            "target": "billing_model",
            "enum": [
              "PAYG",
              "DRAAS",
              "RESERVED"
            ],
            "description": "Billing model allowed for Service Class ECO, STD"
          },
          {
            "consoles": null,
            "whenHuman": "(service_class = HP)",
            "when": {
              "or": [
                {
                  "field": "service_class",
                  "value": "HP"
                }
              ]
            },
            "target": "billing_model",
            "enum": [
              "PAYG",
              "RESERVED"
            ],
            "description": "Billing model allowed for Service Class HP"
          },
          {
            "consoles": null,
            "whenHuman": "(service_class = VOIP)",
            "when": {
              "or": [
                {
                  "field": "service_class",
                  "value": "VOIP"
                }
              ]
            },
            "target": "billing_model",
            "enum": [
              "RESERVED"
            ],
            "description": "Billing model allowed for Service Class VOIP"
          },
          {
            "consoles": null,
            "whenHuman": "",
            "when": {},
            "target": "storage_billing_model",
            "enum": [
              "PAYG",
              "RESERVED"
            ],
            "description": "Storage billing model allowed for Service Class ECO"
          },
          {
            "consoles": null,
            "whenHuman": "(billing_model = PAYG OR billing_model = DRAAS)",
            "when": {
              "or": [
                {
                  "field": "billing_model",
                  "value": "PAYG"
                },
                {
                  "field": "billing_model",
                  "value": "DRAAS"
                }
              ]
            },
            "target": "vcpu",
            "min": 5,
            "max": 200,
            "description": "VCPU allowed for Service Class ECO with PAYG or DRAAS billing model"
          },
          {
            "consoles": null,
            "whenHuman": "(billing_model = RESERVED)",
            "when": {
              "or": [
                {
                  "field": "billing_model",
                  "value": "RESERVED"
                }
              ]
            },
            "target": "vcpu",
            "min": 2,
            "max": 1136,
            "description": "VCPU allowed for Service Class ECO with RESERVED billing model"
          },
          {
            "consoles": null,
            "whenHuman": "",
            "when": {},
            "target": "memory",
            "min": 1,
            "max": 5120,
            "description": "Memory allowed for Service Class ECO",
            "unit": "GB"
          },
          {
            "consoles": null,
            "whenHuman": "(disponibility_class = ONE-ROOM)",
            "when": {
              "or": [
                {
                  "field": "disponibility_class",
                  "value": "ONE-ROOM"
                }
              ]
            },
            "target": "storage_profiles.{index}.class",
            "enum": [
              "silver",
              "gold",
              "platinum3k",
              "platinum7k",
              "^(silver|gold|platinum[3|7]{1}k)_(ocb[0-9]{1,7})$"
            ],
            "description": "Storage profile class allowed for Disponibility Class ONE-ROOM"
          },
          {
            "consoles": [
              "Console Externe VDR",
              "Console Interne VDR"
            ],
            "whenHuman": "(disponibility_class = DUAL-ROOM)",
            "when": {
              "or": [
                {
                  "field": "disponibility_class",
                  "value": "DUAL-ROOM"
                }
              ]
            },
            "target": "storage_profiles.{index}.class",
            "enum": [
              "silver_r1",
              "silver_r2",
              "gold_r1",
              "gold_r2",
              "platinum3k_r1",
              "platinum3k_r2",
              "platinum7k_r1",
              "platinum7k_r2",
              "^(silver|gold|platinum[3|7]{1}k)_(ocb[0-9]{1,7})_(r1|r2)$"
            ],
            "description": "Storage profile class allowed for Disponibility Class DUAL-ROOM"
          },
          {
            "consoles": [
              "Console Externe VDR",
              "Console Interne VDR"
            ],
            "whenHuman": "(disponibility_class = HA-DUAL-ROOM)",
            "when": {
              "or": [
                {
                  "field": "disponibility_class",
                  "value": "HA-DUAL-ROOM"
                }
              ]
            },
            "target": "storage_profiles.{index}.class",
            "enum": [
              "gold_hm",
              "platinum3k_hm",
              "platinum7k_hm",
              "^(gold|platinum[3|7]{1}k)_(ocb[0-9]{1,7})_(hm)$"
            ],
            "description": "Storage profile class allowed for Disponibility Class HA-DUAL-ROOM"
          }
        ]
      },
      "Delete": {
        "namespace": "VDC",
        "resource": "",
        "verb": "Delete",
        "short_documentation": "DeleteVDC deletes an existing VDC",
        "long_documentation": "Delete VDC performs a DELETE request to delete an existing VDC.",
        "markdown_documentation": "",
        "params": [
          {
            "name": "id",
            "description": "ID of the VDC to delete",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": "The value is required if the parameter `name` is null., Validates that the value is a valid URN (`vdc`).. \n"
          },
          {
            "name": "name",
            "description": "Name of the VDC to delete",
            "required": false,
            "example": "my-vdc",
            "type": "string",
            "validators_description": "The value is required if the parameter `id` is null., "
          }
        ],
        "deprecated": false,
        "deprecated_message": "",
        "model": null
      },
      "Get": {
        "namespace": "VDC",
        "resource": "",
        "verb": "Get",
        "short_documentation": "Get VDC details",
        "long_documentation": "Retrieve detailed information about a specific Virtual Data Center (VDC) by its name.",
        "markdown_documentation": "",
        "params": [
          {
            "name": "id",
            "description": "ID of the VDC to get",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": "The value is required if the parameter `name` is null., Validates that the value is a valid URN (`vdc`).. \n"
          },
          {
            "name": "name",
            "description": "Name of the VDC to get",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": "The value is required if the parameter `id` is null., "
          }
        ],
        "deprecated": false,
        "deprecated_message": "",
        "model": [
          {
            "object": "id",
            "type": "string",
            "documentation": "ID of the VDC"
          },
          {
            "object": "name",
            "type": "string",
            "documentation": "Name of the VDC"
          },
          {
            "object": "description",
            "type": "string",
            "documentation": "Description of the VDC"
          },
          {
            "object": "compute_capacity.cpu.vcpu",
            "type": "int",
            "documentation": "Number of VCPUs"
          },
          {
            "object": "compute_capacity.cpu.used",
            "type": "int",
            "documentation": "Used VCPUs"
          },
          {
            "object": "compute_capacity.cpu.frequency",
            "type": "int",
            "documentation": "Frequency of the VCPUs in MHz"
          },
          {
            "object": "compute_capacity.memory.limit",
            "type": "int",
            "documentation": "Limit of memory in GB"
          },
          {
            "object": "compute_capacity.memory.used",
            "type": "int",
            "documentation": "Used memory in GB"
          },
          {
            "object": "networks.{index}.id",
            "type": "string",
            "documentation": "ID of the network"
          },
          {
            "object": "networks.{index}.name",
            "type": "string",
            "documentation": "Name of the network"
          },
          {
            "object": "storage_profiles.{index}.id",
            "type": "string",
            "documentation": "ID of the storage profile"
          },
          {
            "object": "storage_profiles.{index}.name",
            "type": "string",
            "documentation": "Class name of the storage profile"
          },
          {
            "object": "properties.service_class",
            "type": "string",
            "documentation": "Service class of the VDC"
          },
          {
            "object": "properties.disponibility_class",
            "type": "string",
            "documentation": "Disponibility class of the VDC"
          },
          {
            "object": "properties.billing_model",
            "type": "string",
            "documentation": "Billing model of the VDC compute"
          },
          {
            "object": "properties.storage_billing_model",
            "type": "string",
            "documentation": "Billing model of the VDC storage"
          },
          {
            "object": "number_of_vms",
            "type": "int",
            "documentation": "Number of VMs in the VDC"
          },
          {
            "object": "number_of_running_vms",
            "type": "int",
            "documentation": "Number of running VMs in the VDC"
          },
          {
            "object": "number_of_vapps",
            "type": "int",
            "documentation": "Number of deployed VApps in the VDC"
          },
          {
            "object": "number_of_storage_profiles",
            "type": "int",
            "documentation": "Number of storage profiles in the VDC"
          },
          {
            "object": "number_of_disks",
            "type": "int",
            "documentation": "Number of disks in the VDC"
          }
        ]
      },
      "List": {
        "namespace": "VDC",
        "resource": "",
        "verb": "List",
        "short_documentation": "List VDCs",
        "long_documentation": "List all Virtual Data Centers (VDCs) available in your organization. If no filters are applied, it returns all VDCs.",
        "markdown_documentation": "",
        "params": [
          {
            "name": "id",
            "description": "ID of the VDC to filter by",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": "Validates that the value is a valid URN (`vdc`).. \n"
          },
          {
            "name": "name",
            "description": "Name of the VDC to filter by",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": ""
          }
        ],
        "deprecated": false,
        "deprecated_message": "",
        "model": [
          {
            "object": "vdcs.{index}.id",
            "type": "string",
            "documentation": "ID of the VDC"
          },
          {
            "object": "vdcs.{index}.name",
            "type": "string",
            "documentation": "Name of the VDC"
          },
          {
            "object": "vdcs.{index}.description",
            "type": "string",
            "documentation": "Description of the VDC"
          },
          {
            "object": "vdcs.{index}.number_of_vms",
            "type": "int",
            "documentation": "Number of VMs in the VDC"
          },
          {
            "object": "vdcs.{index}.number_of_running_vms",
            "type": "int",
            "documentation": "Number of running VMs in the VDC"
          },
          {
            "object": "vdcs.{index}.number_of_vapps",
            "type": "int",
            "documentation": "Number of deployed VApps in the VDC"
          },
          {
            "object": "vdcs.{index}.number_of_storage_profiles",
            "type": "int",
            "documentation": "Number of storage profiles in the VDC"
          },
          {
            "object": "vdcs.{index}.number_of_disks",
            "type": "int",
            "documentation": "Number of disks in the VDC"
          }
        ]
      },
      "Update": {
        "namespace": "VDC",
        "resource": "",
        "verb": "Update",
        "short_documentation": "UpdateVDC updates an existing VDC",
        "long_documentation": "Update VDC performs a PUT request to update an existing VDC. Enter only the fields you want to update.",
        "markdown_documentation": "",
        "params": [
          {
            "name": "id",
            "description": "ID of the VDC to get",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": "The value is required if the parameter `name` is null., Validates that the value is a valid URN (`vdc`).. \n"
          },
          {
            "name": "name",
            "description": "Name of the VDC to get",
            "required": false,
            "example": "my-vdc",
            "type": "string",
            "validators_description": "The value is required if the parameter `id` is null., "
          },
          {
            "name": "description",
            "description": "The description of the VDC.",
            "required": false,
            "example": "",
            "type": "string",
            "validators_description": ""
          },
          {
            "name": "vcpu",
            "description": "The number of virtual CPUs for the VDC.",
            "required": false,
            "example": "50",
            "type": "int",
            "validators_description": ""
          },
          {
            "name": "memory",
            "description": "The amount of memory for the VDC.",
            "required": false,
            "example": "500",
            "type": "int",
            "validators_description": ""
          }
        ],
        "deprecated": false,
        "deprecated_message": "",
        "model": null,
        "rules": [
          {
            "consoles": null,
            "whenHuman": "(billing_model = PAYG OR billing_model = DRAAS)",
            "when": {
              "or": [
                {
                  "field": "billing_model",
                  "value": "PAYG"
                },
                {
                  "field": "billing_model",
                  "value": "DRAAS"
                }
              ]
            },
            "target": "vcpu",
            "min": 5,
            "max": 200,
            "description": "VCPU allowed for Service Class ECO with PAYG or DRAAS billing model"
          },
          {
            "consoles": null,
            "whenHuman": "(billing_model = RESERVED)",
            "when": {
              "or": [
                {
                  "field": "billing_model",
                  "value": "RESERVED"
                }
              ]
            },
            "target": "vcpu",
            "min": 2,
            "max": 1136,
            "description": "VCPU allowed for Service Class ECO with RESERVED billing model"
          },
          {
            "consoles": null,
            "whenHuman": "",
            "when": {},
            "target": "memory",
            "min": 1,
            "max": 5120,
            "description": "Memory allowed for Service Class ECO",
            "unit": "GB"
          }
        ]
      }
    },
    "SubFunctionality": {
      "StorageProfile": {
        "Title": "StorageProfile",
        "Documentation": "",
        "MarkdownDocumentation": "",
        "Commands": {
          "Add": {
            "namespace": "VDC",
            "resource": "StorageProfile",
            "verb": "Add",
            "short_documentation": "Add a new VDC Storage Profile",
            "long_documentation": "Add one or more storage profiles to a specific VDC.",
            "markdown_documentation": "",
            "params": [
              {
                "name": "vdc_id",
                "description": "ID of the VDC to add the storage profile to",
                "required": false,
                "example": "",
                "type": "string",
                "validators_description": "The value is required if the parameter `vdc_name` is null., Validates that the value is a valid URN (`vdc`).. \n"
              },
              {
                "name": "vdc_name",
                "description": "Name of the VDC to add the storage profile to",
                "required": false,
                "example": "my-vdc",
                "type": "string",
                "validators_description": "The value is required if the parameter `vdc_id` is null., "
              },
              {
                "name": "storage_profiles.{index}.class",
                "description": "Class of the storage profile to create. Predefined classes or dedicated storage classes can be used. See rules for more information.",
                "required": true,
                "example": "gold",
                "type": "string",
                "validators_description": ""
              },
              {
                "name": "storage_profiles.{index}.limit",
                "description": "Limit of the storage profile to create. This is the maximum amount of storage that can be used by the VDC. This is in GiB.",
                "required": true,
                "example": "500",
                "type": "int",
                "validators_description": "Validates that the value is between 100 and 81920. \n"
              },
              {
                "name": "storage_profiles.{index}.default",
                "description": "Default storage profile to create. This will be used if no specific profile is provided.",
                "required": false,
                "example": "false",
                "type": "bool",
                "validators_description": ""
              }
            ],
            "deprecated": false,
            "deprecated_message": "",
            "model": [
              {
                "object": "id",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "name",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "description",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "href",
                "type": "string",
                "documentation": ""
              },
              {
                "object": "status",
                "type": "cav.JobStatus",
                "documentation": ""
              }
            ],
            "rules": [
              {
                "consoles": null,
                "whenHuman": "(disponibility_class = ONE-ROOM)",
                "when": {
                  "or": [
                    {
                      "field": "disponibility_class",
                      "value": "ONE-ROOM"
                    }
                  ]
                },
                "target": "storage_profiles.{index}.class",
                "enum": [
                  "silver",
                  "gold",
                  "platinum3k",
                  "platinum7k",
                  "^(silver|gold|platinum[3|7]{1}k)_(ocb[0-9]{1,7})$"
                ],
                "description": "Storage profile class allowed for Disponibility Class ONE-ROOM"
              },
              {
                "consoles": [
                  "Console Externe VDR",
                  "Console Interne VDR"
                ],
                "whenHuman": "(disponibility_class = DUAL-ROOM)",
                "when": {
                  "or": [
                    {
                      "field": "disponibility_class",
                      "value": "DUAL-ROOM"
                    }
                  ]
                },
                "target": "storage_profiles.{index}.class",
                "enum": [
                  "silver_r1",
                  "silver_r2",
                  "gold_r1",
                  "gold_r2",
                  "platinum3k_r1",
                  "platinum3k_r2",
                  "platinum7k_r1",
                  "platinum7k_r2",
                  "^(silver|gold|platinum[3|7]{1}k)_(ocb[0-9]{1,7})_(r1|r2)$"
                ],
                "description": "Storage profile class allowed for Disponibility Class DUAL-ROOM"
              },
              {
                "consoles": [
                  "Console Externe VDR",
                  "Console Interne VDR"
                ],
                "whenHuman": "(disponibility_class = HA-DUAL-ROOM)",
                "when": {
                  "or": [
                    {
                      "field": "disponibility_class",
                      "value": "HA-DUAL-ROOM"
                    }
                  ]
                },
                "target": "storage_profiles.{index}.class",
                "enum": [
                  "gold_hm",
                  "platinum3k_hm",
                  "platinum7k_hm",
                  "^(gold|platinum[3|7]{1}k)_(ocb[0-9]{1,7})_(hm)$"
                ],
                "description": "Storage profile class allowed for Disponibility Class HA-DUAL-ROOM"
              }
            ]
          },
          "List": {
            "namespace": "VDC",
            "resource": "StorageProfile",
            "verb": "List",
            "short_documentation": "List VDC Storage Profiles",
            "long_documentation": "List of storage profiles available in a specific VDC.",
            "markdown_documentation": "",
            "params": [
              {
                "name": "id",
                "description": "ID of the VDC to get",
                "required": true,
                "example": "",
                "type": "string",
                "validators_description": "Validates that the value is a valid URN (`vdc`).. \n"
              }
            ],
            "deprecated": false,
            "deprecated_message": "",
            "model": [
              {
                "object": "storage_profiles.{index}.id",
                "type": "string",
                "documentation": "ID of the storage profile"
              },
              {
                "object": "storage_profiles.{index}.class",
                "type": "string",
                "documentation": "Name of the storage profile"
              },
              {
                "object": "storage_profiles.{index}.limit",
                "type": "int",
                "documentation": "Limit of the storage profile in MB"
              },
              {
                "object": "storage_profiles.{index}.used",
                "type": "int",
                "documentation": "Used storage of the storage profile in MB"
              },
              {
                "object": "storage_profiles.{index}.default",
                "type": "bool",
                "documentation": "Is this storage profile the default one?"
              }
            ]
          }
        },
        "SubFunctionality": {}
      }
    }
  }
}
