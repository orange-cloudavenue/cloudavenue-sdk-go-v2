package {{.PackageName}}

import "context"

{{ range .Commands -}}
func (c *Client) {{.Method | verb}}{{.Name}}(ctx context.Context, params ParamsEdgeGateway) (*ModelEdgeGateway, error) {
	logger := c.logger.WithGroup("{{.Method | verb}}{{.Name}}")

	if err := validators.New().Struct(&params); err != nil {
		return nil, fmt.Errorf("invalid parameters: %w", err)
	}

	// Get the endpoint for the edge gateway
	// Error is ignored here because the endpoint is registered at package init time.
	ep, _ := cav.GetEndpoint("{{.Name}}", {{.Method}})

	resp, err := c.c.Do(
        ctx,
        ep,
        cav.WithPathParam(ep.PathParams[0], params.ID),
    )
	if err != nil {
		logger.Error("Failed to get edge gateway", "error", err)
		return nil, err
	}

	return resp.Result().(*apiResponseEdgegateway).toModel(), nil
}
{{ end }}